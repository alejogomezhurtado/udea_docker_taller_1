version: "3.5"

networks:
  front_net:
    driver: bridge
    name: front_net
    ipam:
     config:
       - subnet: 169.1.0.0/16
#         gateway: 169.1.0.1
  back_net:
    driver: bridge
    name: back_net
    ipam:
     config:
       - subnet: 169.2.0.0/16
#         gateway: 169.2.0.1
volumes:
  log:
    
volumes:
  log:
  
services:
  web1:
    image: nginx:1.15.5-alpine
    environment:
      COMPOSE_PROJECT_NAME: tarea2
      SERVICE_PORTS: 9090
    command: sh -c "envsubst < /etc/nginx/conf.d/mysite.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"
    ports:
      - target: 80
    volumes:
      - log:/log
      - $PWD/nginx/www:/var/www/html
      - $PWD/nginx/mysite.template:/etc/nginx/conf.d/mysite.template
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      mode: replicated
      replicas: 2
      labels: [APP=VOTING]
      # service resource management
      resources:
        # Hard limit - Docker does not allow to allocate more
        limits:
          cpus: '0.25'
          memory: 512M
        # Soft limit - Docker makes best effort to return to it
        reservations:
          cpus: '0.25'
          memory: 256M
      # service restart policy
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      # service update configuration
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: continue
        monitor: 60s
        max_failure_ratio: 0.3
      # placement constraint - in this case on 'worker' nodes only
      placement:
        constraints: [node.role == worker]
    networks:
      - front_net
      
  traefik:
    image: traefik:1.7.2-alpine
    container_name: traefik
    networks:
      - front_net
    environment:
      COMPOSE_PROJECT_NAME: tarea2
    ports:
      - "80:80"
      - "443:443"
#      - "8081:8081"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - log:/log
      - $PWD/certificate:/certificate
      - $PWD/traefik/traefik.toml:/traefik.toml
      - /dev/null:/traefik.toml
      - $PWD/traefik/acme.json:/acme.json
    labels:
      - "traefik.enable=true"
      - "traefik.backend=web1"
      - "traefik.frontend.rule=Host:/localhost"
      - "traefik.port=80"
